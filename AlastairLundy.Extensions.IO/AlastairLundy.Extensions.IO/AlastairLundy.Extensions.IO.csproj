<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <LangVersion>13</LangVersion>
        <ImplicitUsings>disable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <TargetFrameworks>net9.0;net8.0;netstandard2.0;netstandard2.1</TargetFrameworks>
        <RepositoryUrl>https://github.com/alastairlundy/IOExtensions</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <IncludeSymbols>true</IncludeSymbols>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <Title>AlastairLundy.Extensions.IO</Title>
        <Authors>AlastairLundy</Authors>
        <Copyright>Copyright (c) Alastair Lundy 2024-2025</Copyright>
        <PackageTags>IO</PackageTags>
        <PackageVersion>2.0.0</PackageVersion>
        <Description> A library to make programmatic directory deletion and creation in .NET easier. </Description>
        <PackageReleaseNotes>## Changes since 1.2.0

### Additions
* Added .NET 9 TFM
* Added ``IFilePathResolver`` interface and implementing  ``FilePathResolver`` class

### Changes
* Changed namespaces for some files
* Made ``FileConcatenator`` a non-static class that inherits from the interface extracted from it ``IFileConcatenator``
* Merged recursive directory related code into a new ``RecursiveDirectoryManager`` class and corresponding interface.
* Merged parent directory related code into a new ``ParentDirectoryManager`` class and corresponding interface

### Removals
* Removed ``IFileRemover`` and ``FileRemover``
* Removed ``DirectoryCreator`` and ``IDirectoryCreator``
* Removed ``IDirectoryExplorer`` - Moved ``IsDirectoryEmpty`` method to an extension method
* Removed ``IRecursiveDirectoryExplorer`` and ``RecursiveDirectoryExplorer`` - This has been mostly merged into ``IRecursiveDirectoryManager`` and ``RecursiveDirectoryManager`` respectively

### Fixes
* Fixed a mistake in an xml doc comment</PackageReleaseNotes>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="PolyFill" Version="[7.18.0, 8.0.0)" Condition="'$(TargetFramework)' == 'netstandard2.0' OR '$(TargetFramework)' == 'netstandard2.1'" />
    </ItemGroup>

    <ItemGroup>
      <Compile Update="Internal\Localizations\Resources.Designer.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>Resources.resx</DependentUpon>
      </Compile>
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Update="Internal\Localizations\Resources.resx">
        <Generator>ResXFileCodeGenerator</Generator>
        <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
        <Content Include="..\..\LICENSE.txt">
            <Link>LICENSE.txt</Link>
            <PackagePath>LICENSE.txt</PackagePath>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
      <Content Include="..\..\README.md">
        <Link>README.md</Link>
          <PackagePath>README.md</PackagePath>
      </Content>
    </ItemGroup>

</Project>
